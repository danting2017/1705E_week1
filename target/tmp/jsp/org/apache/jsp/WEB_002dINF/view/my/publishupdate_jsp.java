/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.7.v20160115
 * Generated at: 2019-09-25 11:01:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.my;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class publishupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private String htmlspecialchars(String str) {
		str = str.replaceAll("&", "&amp;");
		str = str.replaceAll("<", "&lt;");
		str = str.replaceAll(">", "&gt;");
		str = str.replaceAll("\"", "&quot;");
		return str;
	}
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");
	String htmlData = request.getParameter("content1") != null ? request.getParameter("content1") : "";

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<title>KindEditor JSP</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/resource/kindeditor/themes/default/default.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/resource/kindeditor/plugins/code/prettify.css\" />\r\n");
      out.write("<script charset=\"utf-8\"\r\n");
      out.write("\tsrc=\"/resource/kindeditor/plugins/code/prettify.js\"></script>\r\n");
      out.write("<script charset=\"utf-8\" src=\"/resource/kindeditor/kindeditor-all.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("<script charset=\"utf-8\" src=\"/resource/kindeditor/lang/zh-CN.js\"></script>\r\n");
      out.write("<script src=\"/resource/js/jquery-3.2.1.js\"></script>\r\n");
      out.write("<!-- jquery.validate 校验提示样式 -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/resource/css/jquery/screen.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/resource/js/jquery.validate.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tKindEditor.ready(function(K) {\r\n");
      out.write("\t\twindow.editor1 = K.create('textarea[name=\"content1\"]', {\r\n");
      out.write("\t\t\tcssPath : '/resource/kindeditor/plugins/code/prettify.css',\r\n");
      out.write("\t\t\tuploadJson : '/resource/kindeditor/jsp/upload_json.jsp',\r\n");
      out.write("\t\t\tfileManagerJson : '/resource/kindeditor/jsp/file_manager_json.jsp',\r\n");
      out.write("\t\t\tallowFileManager : true,\r\n");
      out.write("\t\t\tafterCreate : function() {\r\n");
      out.write("\t\t\t\tvar self = this;\r\n");
      out.write("\t\t\t\tK.ctrl(document, 13, function() {\r\n");
      out.write("\t\t\t\t\tself.sync();\r\n");
      out.write("\t\t\t\t\tdocument.forms['example'].submit();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tK.ctrl(self.edit.doc, 13, function() {\r\n");
      out.write("\t\t\t\t\tself.sync();\r\n");
      out.write("\t\t\t\t\tdocument.forms['example'].submit();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tprettyPrint();\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction query() {\r\n");
      out.write("\t\talert(editor1.html())\r\n");
      out.write("\t\t//alert( $(\"[name='content1']\").attr(\"src\"))\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.print(htmlData);
      out.write("\r\n");
      out.write("\t<form id=\"form1\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<label for=\"title\"> 文章标题:</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\tclass=\"form-control\" id=\"title\" name=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<textarea name=\"content1\" cols=\"100\" rows=\"8\"\r\n");
      out.write("\t\t\tstyle=\"width: 825px; height: 260px; visibility: hidden;\" >");
      out.print(htmlspecialchars(htmlData));
      out.write("\r\n");
      out.write("\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t\t</textarea>\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<div class=\"form-group form-inline\" >\r\n");
      out.write("\t\t\t栏目: <select name=\"channelId\"   class=\"form-control\" id=\"channel\">\r\n");
      out.write("\t\t\t\t<option value=\"-1\">请选择</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</select> 分类: <select name=\"categoryId\" class=\"form-control\" id=\"category\"></select>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"form-group \">\r\n");
      out.write("\r\n");
      out.write("\t\t\t标题图片: <input type=\"file\" class=\"form-control\" name=\"file\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<input type=\"s\" name=\"button\"  class=\"btn btn-info\" value=\"修改文章\" onclick=\"publish()\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$(\"#form1\").validate({\r\n");
      out.write("\t\trules:{\r\n");
      out.write("\t\t\tchannelId:{\r\n");
      out.write("\t\t\t\tmin:1,\r\n");
      out.write("\t\t\t\trequired:true,\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tmessages:{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tchannelId:{\r\n");
      out.write("\t\t\t\tmin:\"栏目不能为空\",\r\n");
      out.write("\t\t\t\trequired:\"用户名不能为空\",\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tsubmitHandler: function(form) {\r\n");
      out.write("\t\t\t//序列化表单数据 带文件\r\n");
      out.write("\t\t\t var formData = new FormData($( \"#form1\" )[0]);\r\n");
      out.write("\t\t\t//封装富文本中的html内容\r\n");
      out.write("\t\t\tformData.set(\"content\",editor1.html());\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\t\t// 告诉jQuery不要去处理发送的数据\r\n");
      out.write("\t\t\t\tprocessData : false,\r\n");
      out.write("\t\t\t\t// 告诉jQuery不要去设置Content-Type请求头\r\n");
      out.write("\t\t\t\tcontentType : false,\r\n");
      out.write("\t\t\t   data:formData,\r\n");
      out.write("\t\t\t   url:\"/article/publishupdate\",\r\n");
      out.write("\t\t\t   success:function(flag){\r\n");
      out.write("\t\t\t\t   if(flag){\r\n");
      out.write("\t\t\t\t\t   alert(\"修改成功\");\r\n");
      out.write("\t\t\t\t   }else{\r\n");
      out.write("\t\t\t\t\t   alert(\"修改失败\");\r\n");
      out.write("\t\t\t\t   }\r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//发布文章\r\n");
      out.write("function publish(){\r\n");
      out.write("\t$(\"#form1\").submit();\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("\t//为栏目加载对象\r\n");
      out.write("\t$.get(\"/channel/selects\",function(list){\r\n");
      out.write("\t\tfor(var i in list){\r\n");
      out.write("\t\t\t$(\"#channel\").append(\"<option value='\"+list[i].id+\"'>\"+list[i].name+\"</option>\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\"#channel\").val('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.channelId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');//让下拉框选中\r\n");
      out.write("\t\tif($(\"#channel\").val()!=null){//如果分类有值则去查询栏目下的分类\r\n");
      out.write("\t\t\tgetCategory($(\"#channel\").val());\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t//为栏目提交change事件\r\n");
      out.write("\t$(\"#channel\").change(function(){\r\n");
      out.write("\t\t//先清空分类下内容,在追加\r\n");
      out.write("\t\t$(\"#category\").empty();\r\n");
      out.write("\t\t//获取当前栏目的ID\r\n");
      out.write("\t\tvar channelId =$(this).val();\r\n");
      out.write("\t\t//去查询栏目下的所有分类\r\n");
      out.write("\t\tgetCategory(channelId);\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//获取分类\r\n");
      out.write("function getCategory(channelId){\r\n");
      out.write("\t$.get(\"/category/selects\",{channelId:channelId},function(list){\r\n");
      out.write("\t\tfor(var i in list){\r\n");
      out.write("\t\t\t$(\"#category\").append(\"<option value='\"+list[i].id+\"'>\"+list[i].name+\"</option>\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//\r\n");
      out.write("\t\t$(\"#category\").val('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.categoryId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');//让下拉框选中\r\n");
      out.write("\t})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
